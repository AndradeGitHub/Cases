@model List<ubs.brasil.qualitycontrol.comum.entidade.Enquadramento>

@using ubs.brasil.qualitycontrol.comum.globals  
   
@if (Model != null && Model.Count > 0)
{
    if (string.IsNullOrEmpty(Model[0].Msg))    
    {
        string backColor = "#f5f4f4";
        bool primeiraVez = true;
        bool carteiraPreenchida = false;
        string tdfor = string.Empty;
        string codCarteira = string.Empty;
        int codTipoFiltroPai = 0;
        
        <tr class="tabelaLimiteDiarioTopo">
            <td style="border: 1px solid #000000; width:8%; margin: 0px; padding: 0px; padding-top: 14px; padding-bottom: 14px;"></td>
            <td style="border: 1px solid #000000; width:7%; margin: 0px; padding: 0px;"></td>
            <td align="center" style="border: 1px solid #000000; width:30%; margin: 0px; padding: 0px;">Conciliação</td>
            <td align="center" style="border: 1px solid #000000; width:30%; margin: 0px; padding: 0px;">Rentabilidade</td>
            <td align="center" style="border: 1px solid #000000; width:30%; margin: 0px; padding: 0px;">Acuracidade</td>
        </tr>     
      
        if (Model[0].inDiarioMensal.ToUpper().Equals("DIARIO"))            
        {      
            <tr class="tabelaLimiteDiarioTopo">
                <td style="border: 1px solid #000000; padding-left: 5px; width:8%;">Carteira</td>
                <td style="border: 1px solid #000000; padding-left: 5px; width:7%;">Data</td>
                <td style="border: 1px solid #000000; width:28%; margin: 0px; padding: 0px;">
                    <table style="width:100%; margin: 0px; padding: 0px;">
                        <tr style="width:100%; margin: 0px; padding: 0px;">                        
                            <td align="center" style="width:25%;">C/C</td>
                            <td align="center" style="width:25%;">RF</td>
                            <td align="center" style="width:25%;">RV</td>
                            <td align="center" style="width:25%;">Fundos</td>
                        </tr>
                    </table>
                </td>
                <td style="border: 1px solid #000000; width:28%; margin: 0px; padding: 0px;">
                    <table style="width:100%; margin: 0px; padding: 0px;">
                        <tr style="width:100%; margin: 0px; padding: 0px;">                        
                            <td align="center" style="width:50%;">Val. Patr. Dia</td>
                            <td align="center" style="width:50%;">Val. Cota Dia</td>
                        </tr>
                    </table>
                </td>
                <td style="border: 1px solid #000000; width:28%; margin: 0px; padding: 0px;">
                    <table style="width:100%; margin: 0px; padding: 0px;">
                        <tr style="width:100%; margin: 0px; padding: 0px;">                        
                            <td align="center" style="width:34%;">Carteira Abertura</td>
                            <td align="center" style="width:33%;">Carteira Encerrada</td>
                            <td align="center" style="width:33%;">Carteira Zerada</td>                        
                        </tr>
                    </table>
                </td>
            </tr>   
        }
        else if (Model[0].inDiarioMensal.ToUpper().Equals("MENSAL"))
        {
            <tr class="tabelaLimiteDiarioTopo">
                <td style="border: 1px solid #000000; padding-left: 5px; width:8%;">Carteira</td>
                <td style="border: 1px solid #000000; padding-left: 5px; width:7%;">Data</td>                
                <td style="border: 1px solid #000000; width:28%; margin: 0px; padding: 0px;">
                    <table style="width:100%; margin: 0px; padding: 0px;">
                        <tr style="width:100%; margin: 0px; padding: 0px;">                        
                            <td align="center" style="width:25%;">C/C</td>
                            <td align="center" style="width:25%;">RF</td>
                            <td align="center" style="width:25%;">RV</td>
                            <td align="center" style="width:25%;">Fundos</td>
                        </tr>
                    </table>
                </td>
                <td style="border: 1px solid #000000; width:28%; margin: 0px; padding: 0px;">
                    <table style="width:100%; margin: 0px; padding: 0px;">
                        <tr style="width:100%; margin: 0px; padding: 0px;">                        
                            <td align="center" style="width:50%;">Val. Patr. Mensal</td>
                            <td align="center" style="width:50%;">Val. Cota Mensal</td>
                        </tr>
                    </table>
                </td>
                <td style="border: 1px solid #000000; width:28%; margin: 0px; padding: 0px;">
                    <table style="width:100%; margin: 0px; padding: 0px;">
                        <tr style="width:100%; margin: 0px; padding: 0px;">                        
                            <td align="center" style="width:25%;">Carteira Abertura</td>
                            <td align="center" style="width:25%;">Carteira Encerrada</td>                                                
                            <td align="center" style="width:25%;">Carteira Zerada</td>  
                            <td align="center" style="width:25%;">Bloqueio Ativo</td>                          
                        </tr>
                    </table>
                </td>
            </tr>             
        }      
    
        foreach (ubs.brasil.qualitycontrol.comum.entidade.Enquadramento enquadramento in Model)
        {                                   
            if (!enquadramento.codCarteira.Equals(codCarteira))
            {
                if (!primeiraVez)
                {
                    @Html.Raw("</tr>");

                    primeiraVez = true;
                }

                string codCarteiraFunc = enquadramento.codCarteira.Replace(" ", "_");
                int codProcessamento = enquadramento.codProcessamento;

                string paramFunc = string.Concat(codCarteiraFunc, "|", codProcessamento, "|", enquadramento.dtResultado.ToString("dd/MM/yyyy"), "|", Model[0].inDiarioMensal);

                string dtPosicao = string.Empty;
                if (!string.IsNullOrEmpty(enquadramento.dtPosicao.ToString()))
                {
                    dtPosicao = ((DateTime)enquadramento.dtPosicao).ToString("dd/MM/yyyy");
                }
                
                tdfor = "<tr class='tabelaLimiteDiarioRegistro' style='background-color: " + backColor + "; cursor: hand;' id='trRegistroEnquadramento' onclick=fnAbreDetalheEnquadramento('" + paramFunc + "')>";                    
                //tdfor = "<tr class='tabelaLimiteDiarioRegistro' style='background-color: " + backColor + ";' id='trRegistroEnquadramento'>";                    
                tdfor += "<td style='border: 1px solid #000000; padding-left: 5px; width:8%;'>"+ enquadramento.codCarteira +"</td>";
                tdfor += "<td style='border: 1px solid #000000; padding-left: 5px; width:8%;'>" + dtPosicao + "</td>";   
                    
                @Html.Raw(tdfor);

                tdfor = string.Empty;                

                codCarteira = enquadramento.codCarteira;                    
                    
                if (backColor.Equals("#f5f4f4"))
                {
                    backColor = "#ffffff";
                }
                else
                {
                    backColor = "#f5f4f4";
                }                             
                    
                foreach (ubs.brasil.qualitycontrol.comum.entidade.Enquadramento enquadramentoInt in Model)
                {                              
                    if (!enquadramento.codCarteira.Equals(enquadramentoInt.codCarteira) && !primeiraVez)
                    {                                                                                       
                        if (carteiraPreenchida)
                        {
                            carteiraPreenchida = false;

                            break;
                        }
                    }

                    primeiraVez = false;

                    if (enquadramento.codCarteira.Equals(enquadramentoInt.codCarteira))
                    {
                        if ((!enquadramentoInt.codTipoFiltroPai.Equals(codTipoFiltroPai)) ||
                            (enquadramentoInt.codTipoFiltroPai.Equals(1) && enquadramentoInt.codTipoFiltro.Equals(5)))
                        {
                            tdfor =  "<td style='border: 1px solid #000000; width:28%; margin: 0px; padding: 0px;'>";
                            tdfor += "<table style='width:100%; margin: 0px; padding: 0px;'>";
                            tdfor += "<tr style='width:100%; margin: 0px; padding: 0px;'>";                                                     

                            @Html.Raw(tdfor);
                                    
                            tdfor = string.Empty;                            
                        }
                            
                        carteiraPreenchida = true;

                        string inEnquadrado = string.Empty;
                        string fontColor = string.Empty;

                        if (enquadramentoInt.inEnquadrado.ToUpper().Equals("S"))
                        {
                            inEnquadrado = " ";
                            fontColor = "green";
                        }
                        else if (enquadramentoInt.inEnquadrado.ToUpper().Equals("N"))
                        {
                            inEnquadrado = "x";
                            fontColor = "red";
                        }
                        else
                        {
                            inEnquadrado = "-";
                            fontColor = "#000000";
                        }
                                                  
                        if ((Model[0].inDiarioMensal.ToUpper().Equals("DIARIO") &&
                            enquadramentoInt.codTipoFiltro != (int)TiposDeFiltro.VALORIZACAO_PATRIMONIAL_MENSAL &&
                            enquadramentoInt.codTipoFiltro != (int)TiposDeFiltro.VALORIZACAO_MENSAL_COTA &&
                            enquadramentoInt.codTipoFiltro != (int)TiposDeFiltro.BLOQUEIO_ATIVOS_MENSAL) ||
                            (Model[0].inDiarioMensal.ToUpper().Equals("MENSAL") &&
                            enquadramentoInt.codTipoFiltro != (int)TiposDeFiltro.VALORIZACAO_PATRIMONIAL_DIARIA &&
                            enquadramentoInt.codTipoFiltro != (int)TiposDeFiltro.VALORIZACAO_DIARIA_COTA))
                        {                                                       
                            if (enquadramentoInt.codTipoFiltroPai.Equals(1))
                            {                                                
                                <td align="center" style="width:25%; font-weight: bold; color: @fontColor;">@inEnquadrado</td>                            
                            }
                            if (enquadramentoInt.codTipoFiltroPai.Equals(2))
                            {                                                
                                <td align="center" style="width:50%; font-weight: bold; color: @fontColor;">@inEnquadrado</td>                          
                            }
                            if (enquadramentoInt.codTipoFiltroPai.Equals(3))
                            {     
                                if (Model[0].inDiarioMensal.ToUpper().Equals("DIARIO"))
                                {                                           
                                    <td align="center" style="width:34%; font-weight: bold; color: @fontColor;">@inEnquadrado</td>                           
                                }
                                else if (Model[0].inDiarioMensal.ToUpper().Equals("MENSAL"))
                                {
                                    <td align="center" style="width:25%; font-weight: bold; color: @fontColor;">@inEnquadrado</td>  
                                }
                            }
                        }

                        if (
                            (enquadramentoInt.codTipoFiltroPai.Equals(1) && enquadramentoInt.codTipoFiltro.Equals(8)) ||
                            (enquadramentoInt.codTipoFiltroPai.Equals(2) && enquadramentoInt.codTipoFiltro.Equals(12)) ||
                            (enquadramentoInt.codTipoFiltroPai.Equals(3) && enquadramentoInt.codTipoFiltro.Equals(16))
                            )
                        {
                            tdfor = "</tr></table></td>";                                                 

                            @Html.Raw(tdfor);

                            tdfor = string.Empty;
                        }

                        codTipoFiltroPai = enquadramentoInt.codTipoFiltroPai;
                    }
                }               
            }
        }

        @Html.Raw("</tr>");
                          
        if (Model[0].inDiarioMensal.ToUpper().Equals("MENSAL"))
        {                          
            <script type="text/javascript">
                document.getElementById("dtResultado").value = '@Model[0].DtPesq.ToString("MM/yyyy")';    
            </script>                           
        }
        else if (Model[0].inDiarioMensal.ToUpper().Equals("DIARIO"))
        {
            <script type="text/javascript">
                document.getElementById("dtResultado").value = '@Model[0].DtPesq.ToString("dd/MM/yyyy")';    
            </script>              
        }
    }
    else
    {
        <script type="text/javascript">
            document.getElementById("msgHidden").value = "@Model[0].Msg";            
        </script>            
    }        
}  